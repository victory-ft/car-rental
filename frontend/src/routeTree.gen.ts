/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

import { Route as rootRouteImport } from './routes/__root'
import { Route as IndexRouteImport } from './routes/index'
import { Route as CategoriesIndexRouteImport } from './routes/categories/index'
import { Route as CarIdRouteImport } from './routes/car/$id'

const IndexRoute = IndexRouteImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => rootRouteImport,
} as any)
const CategoriesIndexRoute = CategoriesIndexRouteImport.update({
  id: '/categories/',
  path: '/categories/',
  getParentRoute: () => rootRouteImport,
} as any)
const CarIdRoute = CarIdRouteImport.update({
  id: '/car/$id',
  path: '/car/$id',
  getParentRoute: () => rootRouteImport,
} as any)

export interface FileRoutesByFullPath {
  '/': typeof IndexRoute
  '/car/$id': typeof CarIdRoute
  '/categories': typeof CategoriesIndexRoute
}
export interface FileRoutesByTo {
  '/': typeof IndexRoute
  '/car/$id': typeof CarIdRoute
  '/categories': typeof CategoriesIndexRoute
}
export interface FileRoutesById {
  __root__: typeof rootRouteImport
  '/': typeof IndexRoute
  '/car/$id': typeof CarIdRoute
  '/categories/': typeof CategoriesIndexRoute
}
export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths: '/' | '/car/$id' | '/categories'
  fileRoutesByTo: FileRoutesByTo
  to: '/' | '/car/$id' | '/categories'
  id: '__root__' | '/' | '/car/$id' | '/categories/'
  fileRoutesById: FileRoutesById
}
export interface RootRouteChildren {
  IndexRoute: typeof IndexRoute
  CarIdRoute: typeof CarIdRoute
  CategoriesIndexRoute: typeof CategoriesIndexRoute
}

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/': {
      id: '/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof IndexRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/categories/': {
      id: '/categories/'
      path: '/categories'
      fullPath: '/categories'
      preLoaderRoute: typeof CategoriesIndexRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/car/$id': {
      id: '/car/$id'
      path: '/car/$id'
      fullPath: '/car/$id'
      preLoaderRoute: typeof CarIdRouteImport
      parentRoute: typeof rootRouteImport
    }
  }
}

const rootRouteChildren: RootRouteChildren = {
  IndexRoute: IndexRoute,
  CarIdRoute: CarIdRoute,
  CategoriesIndexRoute: CategoriesIndexRoute,
}
export const routeTree = rootRouteImport
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()
